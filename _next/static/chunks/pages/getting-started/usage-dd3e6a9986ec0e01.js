(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7390],{24762:function(e,a,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/getting-started/usage",function(){return r(71989)}])},71989:function(e,a,r){"use strict";r.r(a);var t=r(85893),n=r(91611),i=r(41664),l=r.n(i);a.default=function(e){return(0,t.jsxs)(n.Z,{header:"Usage",children:[(0,t.jsxs)("div",{className:"infoParagraph",children:[(0,t.jsx)("b",{children:"react-validatable-form"})," is based on"," ",(0,t.jsx)("a",{className:"outsideUrlSpan",href:"https://reactjs.org/docs/context.html",target:"_blank",rel:"noreferrer",children:"Context"}),". ",(0,t.jsx)("b",{children:"useValidatableForm"})," hook should be used inside ",(0,t.jsx)("b",{children:"ReactValidatableFormProvider"}),". Wrap your App inside ",(0,t.jsx)("b",{children:"ReactValidatableFormProvider"})," and pass the app-scoped"," ",(0,t.jsx)("span",{className:"inner-link",onClick:e.openSettingsDialog,children:"props"}),". Example usage of ",(0,t.jsx)("b",{children:"ReactValidatableFormProvider"}),":"," ",(0,t.jsx)(l(),{className:"inner-link",href:"/library-api/react-validatable-form-provider",children:"See API"})]}),(0,t.jsx)("div",{className:"codeBox",children:(0,t.jsx)("span",{children:"import { ReactValidatableFormProvider } from 'react-validatable-form';\n\n    //....\n    return <ReactValidatableFormProvider>\n                <App />\n        </ReactValidatableFormProvider>;\n    "})}),(0,t.jsxs)("div",{className:"infoParagraph",children:[(0,t.jsx)("b",{children:"useValidatableForm"})," is a React hook that runs validations according to given form data and rules and returns validation results. ",(0,t.jsx)("b",{children:"isValid"})," a boolean value that returns true if form does not contain any validation errors. validationError is a JSON object that keeps the validation errors on the form according to the"," ",(0,t.jsx)(l(),{className:"inner-link",href:"/library-api/path",children:"path"})," ","keys. Example usage of ",(0,t.jsx)("b",{children:"useValidatableForm"})," hook:"," ",(0,t.jsx)(l(),{className:"inner-link",href:"/library-api/use-validatable-form",children:"See API"})]}),(0,t.jsx)("div",{className:"codeBox",children:(0,t.jsx)("span",{children:"import { useValidatableForm } from 'react-validatable-form';\nimport TextField from '@mui/material/TextField';\nimport ExampleUsageWrapper from './../../components/ExampleUsageWrapper';\n\n//....\n    \nconst initialFormData = {};\nconst rules = [{ path: 'val', ruleSet: [{ rule: 'required' }] }];\n\n//....\n\n    const { isValid, formData, setPathValue, getValue, getError } = useValidatableForm({\n        rules,\n        initialFormData,\n    });\n\n    return <TextField\n        error={!!getError('val')}\n        helperText={getError('val') || ' '}\n        label=\"val\"\n        type=\"text\"\n        value={getValue('val') || ''}\n        onChange={(e) => setPathValue('val', e.target.value)}\n    />;\n    "})}),(0,t.jsx)("iframe",{src:"https://stackblitz.com/edit/react-validatable-form?embed=1&file=src%2FApp.js",className:"stackBlitzIFrame",title:"react-validatable-form-embed"})]})}}},function(e){e.O(0,[9774,2888,179],function(){return e(e.s=24762)}),_N_E=e.O()}]);